# -*- tcl -*- tcl.tk//DSL tcltest//EN//2.0 tcl.tk//DSL tcltest//EN//2.0
## (c) 2021 Andreas Kupries
# # ## ### ##### ######## ############# #####################
## TclYAML testsuite
## - API testing
## - Assumes that the wrapped libyaml is passing its own testsuite.
#
## tclyaml type (detection of implicit types, and value normalization)

kt check Tcl     8.5
kt check tcltest 2

kt source support/util.tcl

kt local testing tclyaml

# # ## ### ##### ######## ############# #####################

tcltest::test tclyaml-type-1.0 {tclyaml type, wrong#args} -body {
    tclyaml type
} -returnCodes error -result {wrong # args: should be "tclyaml type value"}

tcltest::test tclyaml-type-1.1 {tclyaml type, wrong#args} -body {
    tclyaml type VALUE X
} -returnCodes error -result {wrong # args: should be "tclyaml type value"}

# - -- --- ----- -------- ------------- ---------------------

foreach {value type normalized} {
    {}     null   {}
    null   null   {}
    NULL   null   {}
    Null   null   {}
    ~      null   {}
    true   bool   true
    True   bool   true
    TRUE   bool   true
    false  bool   false
    False  bool   false
    FALSE  bool   false
    10     int    10
    -10    int    -10
    0o777  int    511
    0xff4f int    65359
    0.     float  0.0
    .1     float  0.1
    .1e3   float  100.0
    .inf   float  Inf
    .Inf   float  Inf
    .INF   float  Inf
    -.inf  float  -Inf
    -.Inf  float  -Inf
    -.INF  float  -Inf
    .nan   float  NaN
    .NaN   float  NaN
    .NAN   float  NaN
    foo    string foo
    5g     string 5g
} {
    incr k

    tcltest::test tclyaml-type-2.$k "tclyaml type: $value" -body {
	tclyaml type $value
    } -result [list $type $normalized]
}
unset k

# # ## ### ##### ######## ############# #####################
cleanupTests
return
